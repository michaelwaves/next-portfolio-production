/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 -t books.glb 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube011: THREE.Mesh
    Cube011_1: THREE.Mesh
    Cube003: THREE.Mesh
    Cube003_1: THREE.Mesh
    Cube004: THREE.Mesh
    Cube004_1: THREE.Mesh
    Cube005: THREE.Mesh
    Cube005_1: THREE.Mesh
    Cube006: THREE.Mesh
    Cube006_1: THREE.Mesh
    Cube007: THREE.Mesh
    Cube007_1: THREE.Mesh
  }
  materials: {
    books: THREE.MeshStandardMaterial
    ['gray.001']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/books.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube011.geometry} material={materials.books} />
      <mesh geometry={nodes.Cube011_1.geometry} material={materials['gray.001']} />
      <mesh geometry={nodes.Cube003.geometry} material={materials.books} />
      <mesh geometry={nodes.Cube003_1.geometry} material={materials['gray.001']} />
      <mesh geometry={nodes.Cube004.geometry} material={materials.books} />
      <mesh geometry={nodes.Cube004_1.geometry} material={materials['gray.001']} />
      <mesh geometry={nodes.Cube005.geometry} material={materials.books} />
      <mesh geometry={nodes.Cube005_1.geometry} material={materials['gray.001']} />
      <mesh geometry={nodes.Cube006.geometry} material={materials.books} />
      <mesh geometry={nodes.Cube006_1.geometry} material={materials['gray.001']} />
      <mesh geometry={nodes.Cube007.geometry} material={materials.books} />
      <mesh geometry={nodes.Cube007_1.geometry} material={materials['gray.001']} />
    </group>
  )
}

useGLTF.preload('/books.glb')
