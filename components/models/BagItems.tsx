/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 -t bag_items.glb 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF,Environment } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { animated, useSpring } from '@react-spring/three'

type GLTFResult = GLTF & {
  nodes: {
    Cylinder: THREE.Mesh
    Cylinder_1: THREE.Mesh
    Cylinder001: THREE.Mesh
    Cylinder001_1: THREE.Mesh
    sanitizer: THREE.Mesh
    Cube001: THREE.Mesh
    Cube001_1: THREE.Mesh
    Cube003: THREE.Mesh
    Cube003_1: THREE.Mesh
    watterbottle: THREE.Mesh
  }
  materials: {
    white: THREE.MeshStandardMaterial
    mosquito: THREE.MeshStandardMaterial
    blue: THREE.MeshStandardMaterial
    peach: THREE.MeshStandardMaterial
    sanitizer1: THREE.MeshStandardMaterial
    passport: THREE.MeshStandardMaterial
    wallet: THREE.MeshStandardMaterial
    brown: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function BagItems(props: any) {
  const { nodes, materials } = useGLTF('/bag_items.glb') as GLTFResult
  const index = props.index
  const INTENSITY_MULTIPLIER = 1
  const {
    s1,
    s2,
    s3,
    s4,
    s5,
    s6,
  } = useSpring({
    s1: index === 0 ? 1.3 : 1,
    s2: index === 1 ? 1.3 : 1,
    s3: index === 2 ? 1.3 : 1,
    s4: index === 3 ? 1.3 : 1,
    s5: index === 4 ? 1.3 : 1,
    s6: index === 5 ? 1.3 : 1,
  })
  return (
    <group rotation-y={Math.PI/6} scale={0.7} position={[0,0,-1]}>
    <animated.group rotation-y={props["rotation-y"]} dispose={null}>
      <Environment preset="forest" />
          <ambientLight intensity={0.5} />
          <pointLight position={[0, 0, 0]} intensity={5} color={"blue"} />
      <animated.mesh scale={s3} geometry={nodes.sanitizer.geometry} material={materials.sanitizer1} />
      <animated.mesh scale={s1} geometry={nodes.watterbottle.geometry} material={materials.blue} />
      
      <animated.group scale={s2}>
      <mesh geometry={nodes.Cylinder.geometry} material={materials.white} />
      <mesh geometry={nodes.Cylinder_1.geometry} material={materials.mosquito} />
      </animated.group>
      <animated.group scale={s4}>
      <mesh geometry={nodes.Cylinder001.geometry} material={materials.blue} />
      <mesh geometry={nodes.Cylinder001_1.geometry} material={materials.peach} />
      </animated.group>
      <animated.group scale={s6}>
      <mesh geometry={nodes.Cube001.geometry} material={materials.passport} />
      <mesh geometry={nodes.Cube001_1.geometry} material={materials.white} />
      </animated.group>
      <animated.group scale={s5}>
      <mesh geometry={nodes.Cube003.geometry} material={materials.wallet} />
      <mesh geometry={nodes.Cube003_1.geometry} material={materials.brown} />
      </animated.group>
    </animated.group>
    </group>
  )
}

useGLTF.preload('/bag_items.glb')
