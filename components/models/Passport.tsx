/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 -t passport.glb 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { toggleStatePopup } from '@/redux/deskSlice'
import { useAppDispatch } from '@/redux/hooks'

type GLTFResult = GLTF & {
  nodes: {
    Cube002: THREE.Mesh
    Cube002_1: THREE.Mesh
  }
  materials: {
    ['passport.001']: THREE.MeshStandardMaterial
    ['white.001']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Passport(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/passport.glb') as GLTFResult
  const dispatch = useAppDispatch()
  const handleClick = (e: any) => {
    e.stopPropagation()
    dispatch(toggleStatePopup('passport'))
  }
  return (
    <group {...props} dispose={null} onClick={(e) => handleClick(e)}>
      <mesh geometry={nodes.Cube002.geometry} material={materials['passport.001']} />
      <mesh geometry={nodes.Cube002_1.geometry} material={materials['white.001']} />
    </group>
  )
}

useGLTF.preload('/passport.glb')
