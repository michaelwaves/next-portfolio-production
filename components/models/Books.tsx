/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 -t books.glb 
*/

import * as THREE from 'three'
import React from 'react'
import { Environment, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { animated, useSpring } from '@react-spring/three'

type GLTFResult = GLTF & {
  nodes: {
    Cube011: THREE.Mesh
    Cube011_1: THREE.Mesh
    Cube003: THREE.Mesh
    Cube003_1: THREE.Mesh
    Cube004: THREE.Mesh
    Cube004_1: THREE.Mesh
    Cube005: THREE.Mesh
    Cube005_1: THREE.Mesh
    Cube006: THREE.Mesh
    Cube006_1: THREE.Mesh
    Cube007: THREE.Mesh
    Cube007_1: THREE.Mesh
  }
  materials: {
    books: THREE.MeshStandardMaterial
    ['gray.001']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Books(props: any) {
  const { nodes, materials } = useGLTF('/books.glb') as GLTFResult
  const index = props.index
  const INTENSITY_MULTIPLIER = 1

  const {
    s1,
    s2,
    s3,
    s4,
    s5,
    s6,
  } = useSpring({
    s1: index === 0 ? 1.5 : 1,
    s2: index === 1 ? 1.5 : 1,
    s3: index === 2 ? 1.5 : 1,
    s4: index === 3 ? 1.5 : 1,
    s5: index === 4 ? 1.5 : 1,
    s6: index === 5 ? 1.5 : 1,
  })
  return (
    <group>
      <group name="fill_light002" position={[-2.34, -7.32, 2.47]} rotation={[-2.94, 1.33, 3.08]} scale={30.19}>
        <pointLight name="fill_light002_Orientation" intensity={50 * INTENSITY_MULTIPLIER} decay={2} color="#bcedff" rotation={[-Math.PI / 2, 0, 0]} />
      </group>
      <group name="Light006" position={[2.87, -1.76, -1.03]} rotation={[1.89, 0.88, -2.05]}>
        <pointLight name="Light006_Orientation" intensity={50 * INTENSITY_MULTIPLIER} decay={2} color="#bcedff" rotation={[-Math.PI / 2, 0, 0]} />
      </group>
      <group name="outside_light_blue" position={[0, 1, 4]} rotation={[-1.71, -0.28, -2.09]} scale={37.03}>
        <pointLight name="outside_light_blue_Orientation" intensity={3 * INTENSITY_MULTIPLIER} decay={2} color="#4D9DFF " rotation={[-Math.PI / 2, 0, 0]} />
      </group>
      <group name="outside_light_blue_1" position={[0, 0, 4]} rotation={[-1.71, -0.28, -2.09]} scale={37.03}>
        <pointLight name="outside_light_blue_1_Orientation" intensity={3 * INTENSITY_MULTIPLIER} decay={2} color="#bcedff" rotation={[-Math.PI / 2, 0, 0]} />
      </group>
      <group rotation-y={-Math.PI / 2 * 0.05}>
        <animated.group rotation-y={props["rotation-y"]} dispose={null} scale={2.5}>
          <Environment preset="forest" />
          <ambientLight intensity={0.5} />
          <pointLight position={[0, 0, 0]} intensity={5} color={"blue"} />
          <animated.group scale={s1}>
            <mesh geometry={nodes.Cube011.geometry} material={materials.books}
            />
            <mesh geometry={nodes.Cube011_1.geometry} material={materials['gray.001']} />
          </animated.group>
          <animated.group scale={s2}>
            <mesh geometry={nodes.Cube003.geometry} material={materials.books} />
            <mesh geometry={nodes.Cube003_1.geometry} material={materials['gray.001']} />
          </animated.group>
          <animated.group scale={s3}>
            <mesh geometry={nodes.Cube004.geometry} material={materials.books} />
            <mesh geometry={nodes.Cube004_1.geometry} material={materials['gray.001']} />
          </animated.group>
          <animated.group scale={s4}>
            <mesh geometry={nodes.Cube005.geometry} material={materials.books} />
            <mesh geometry={nodes.Cube005_1.geometry} material={materials['gray.001']} />
          </animated.group>
          <animated.group scale={s5}>
            <mesh geometry={nodes.Cube006.geometry} material={materials.books} />
            <mesh geometry={nodes.Cube006_1.geometry} material={materials['gray.001']} />
          </animated.group>
          <animated.group scale={s6}>
            <mesh geometry={nodes.Cube007.geometry} material={materials.books} />
            <mesh geometry={nodes.Cube007_1.geometry} material={materials['gray.001']} />
          </animated.group>
        </animated.group>
      </group>
    </group>
  )
}

useGLTF.preload('/books.glb')
