/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 -t headphones.glb 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { toggleState } from '@/redux/deskSlice'
import { useAppDispatch } from '@/redux/hooks'

type GLTFResult = GLTF & {
  nodes: {
    Cube087: THREE.Mesh
    Cube087_1: THREE.Mesh
  }
  materials: {
    ['gray.005']: THREE.MeshStandardMaterial
    ['gray.001']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Headphones(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/headphones.glb') as GLTFResult
  const dispatch = useAppDispatch()
  return (
    <group {...props} dispose={null}
      onClick={() => { dispatch(toggleState("headphones")) }}
    >
      <mesh geometry={nodes.Cube087.geometry} material={materials['gray.005']} />
      <mesh geometry={nodes.Cube087_1.geometry} material={materials['gray.001']} />
    </group>
  )
}

useGLTF.preload('/headphones.glb')
