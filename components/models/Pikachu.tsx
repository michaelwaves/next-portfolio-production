/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 -t pikachu.glb
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from "@react-three/fiber";
import { GLTF } from 'three-stdlib'



type GLTFResult = GLTF & {
  nodes: {
    modifiers_applied001: THREE.SkinnedMesh
    root: THREE.Bone
    ['MCH-torsoparent']: THREE.Bone
    ['MCH-foot_ikparentL']: THREE.Bone
    ['MCH-thigh_ik_targetparentL']: THREE.Bone
    ['MCH-foot_ikparentR']: THREE.Bone
    ['MCH-thigh_ik_targetparentR']: THREE.Bone
    ['MCH-hand_ikparentL']: THREE.Bone
    ['MCH-upper_arm_ik_targetparentL']: THREE.Bone
    ['MCH-hand_ikparentR']: THREE.Bone
    ['MCH-upper_arm_ik_targetparentR']: THREE.Bone
  }
  materials: {
    Pikachu: THREE.MeshStandardMaterial
  }
}

type ActionName = 'eat' | 'idle' | 'rest' | 'wave' | 'wave_short' | 'idle_simple'

export function Pikachu(props: JSX.IntrinsicElements['group']) {
  const group = useRef<any>()

  useFrame(({ camera }) => {
    if (group.current) {
      const targetPosition = camera.position.clone();
      const meshPosition = group.current.position.clone();
      targetPosition.y = meshPosition.y; // Lock rotation along the Y-axis to the camera's Y position
      group.current.lookAt(targetPosition);
    }
  });


  const { nodes, materials, animations } = useGLTF('/pikachu.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  useEffect(() => {
    actions['idle_simple']?.play()
  }, [actions])
  return (
    <group  {...props} dispose={null}>
      <group name="Scene">
        <group name="pikachu_rig" ref={group} position={[2.45, 1.22, 0]} rotation={[-Math.PI, 1.54, -Math.PI]} scale={0.18}>
          <pointLight name="pikachu_light" position={[1, 3, 3]} intensity={1} decay={2} color="#ffc542" rotation={[-Math.PI / 2, 0, 0]} />
          <primitive object={nodes.root} />
          <primitive object={nodes['MCH-torsoparent']} />
          <primitive object={nodes['MCH-foot_ikparentL']} />
          <primitive object={nodes['MCH-thigh_ik_targetparentL']} />
          <primitive object={nodes['MCH-foot_ikparentR']} />
          <primitive object={nodes['MCH-thigh_ik_targetparentR']} />
          <primitive object={nodes['MCH-hand_ikparentL']} />
          <primitive object={nodes['MCH-upper_arm_ik_targetparentL']} />
          <primitive object={nodes['MCH-hand_ikparentR']} />
          <primitive object={nodes['MCH-upper_arm_ik_targetparentR']} />
          <skinnedMesh name="modifiers_applied001" geometry={nodes.modifiers_applied001.geometry} material={materials.Pikachu} skeleton={nodes.modifiers_applied001.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/pikachu.glb')
